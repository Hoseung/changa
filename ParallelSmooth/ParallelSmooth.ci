//ParallelSmooth.ci

mainmodule ParallelSmooth {
	extern module NChilada;
	
	mainchare Main {
		entry Main();
		
		entry [threaded] void loadSortBuild();
		entry [threaded] void doCalculations();
		entry [threaded] void makeHistogram(CkReductionMsg* m);
		entry [threaded] void doStressTest(CkReductionMsg* m);
	};
	
	array [1D] Smooth_TreePiece : TreePiece {
		entry Smooth_TreePiece();
		
		entry void findSmoothingRadius(const int n, const CkCallback& cb);
		entry void performSmoothOperation(const SmoothOperation op, const CkCallback& cb);
		
		entry void handleTreeRequest(TreeRequest_Pointer req);
		entry void receiveResponse(Response_Pointer resp);
		
		entry void saveInformation(const std::string& prefix, const CkCallback& cb);
		
		entry void minmaxDensity(const CkCallback& cb);
		entry void makeDensityHistogram(const int numDensityBins, const double minDensity, const double maxDensity, const CkCallback& cb);
		
		entry void densityCutOperation(const SmoothOperation op, double minDensity, const CkCallback& cb);
	};
	
	initcall void initRequestResponsePUP();
	initcall void initSPHPUP();
};
