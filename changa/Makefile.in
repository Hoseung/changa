# Flags that can be passed during compilation
#FLAG_PRINT = -DCOSMO_PRINT=1       #enable really verbose prints
#FLAG_STATISTICS = -DCOSMO_STATS=1  # enable statistics collection
#FLAG_DEBUG = -DCOSMO_DEBUG=2       # enable debugging information
CACHE_TREE = -DCACHE_TREE          # enable processor tree inside the cache
#INTERLIST = -DINTERLIST_VER=2      # enable interaction lists
#HEXADECAPOLE = -DHEXADECAPOLE	    # use hexadecapole gravity expansions
DEFINE_FLAGS = $(FLAG_PRINT) $(FLAG_STATISTICS) $(FLAG_DEBUG) $(CACHE_TREE) $(INTERLIST) $(HEXADECAPOLE)

STRUCTURES_PATH = ../structures
CXXFLAGS += -O3 -I$(STRUCTURES_PATH) $(DEFINE_FLAGS) @CPPFLAGS@
LDFLAGS += -L../libs -language charm++ -module commlib -module RefineLB -module RefineCommLB -module GreedyLB -module GreedyCommLB -module OrbLB -module RotateLB #-tracemode projections -memory charmdebug
XDR_DIR = ../rpc
XDR_OBJS = $(XDR_DIR)/xdr.o $(XDR_DIR)/xdr_float.o $(XDR_DIR)/xdr_mem.o $(XDR_DIR)/xdr_stdio.o
LDLIBS += ../structures/libTipsy.a @LIBS@

CHARMC = @CHARMC@

CXX = $(CHARMC)
CC = $(CXX)
AR = @AR@
CXX_DEPEND = $(CXX) -M -MM -MG $(CXXFLAGS)
CFLAGS = -g -O3

OBJECTS = DataManager.o Reductions.o TreePiece.o CacheManager.o Sorter.o \
	  param.o GenericTreeNode.o ParallelGravity.o Ewald.o \
	  InOutput.o cosmo.o romberg.o runge.o dumpframe.o dffuncs.o \
	  moments.o
SRSC = Reductions.cpp DataManager.cpp Sorter.cpp TreePiece.cpp CacheManager.C \
	param.c GenericTreeNode.C ParallelGravity.cpp Ewald.C \
	InOutput.C cosmo.c romberg.c runge.c dumpframe.c dffuncs.c \
	moments.c
TARGET = ChaNGa
VERSION = 1.0
all: $(TARGET)

$(TARGET): $(OBJECTS) $(STRUCTURES_PATH)/libTipsy.a
	$(CHARMC) -o $(TARGET) $(LDFLAGS) $(OBJECTS) $(LDLIBS)

$(STRUCTURES_PATH)/libTipsy.a:
	cd $(STRUCTURES_PATH); $(MAKE) libTipsy.a

%.decl.h %.def.h : %.ci
	$(CHARMC) $<

%.o: Makefile

docs:
	doxygen $(TARGET).doxygen

DIRS = teststep

test: $(TARGET)
	for d in $(DIRS); do \
		(cd $$d && $(MAKE) test OPTS='$(OPTS)' || exit 1) || exit 1; \
	done

dist:
	mkdir $(TARGET)-$(VERSION)
	cp Makefile $(TARGET).doxygen *.h *.cpp *.ci $(TARGET)-$(VERSION)/
	tar zcf $(TARGET)-$(VERSION).tar.gz $(TARGET)-$(VERSION)
	rm -Rf $(TARGET)-$(VERSION)

clean:
	rm -f core* $(OBJECTS) *~ $(TARGET) *.decl.h *.def.h charmrun conv-host 

# depend:
# 	$(CXX_DEPEND) $(SRSC) > Makefile.dep

# The following line is a script usable to regenerate the dependace file,
# without the inclusion of charm headers.
#../../charm/bin/charmc  -M -MM -MG -O3 -I../structures -I../ParallelGravity -Wall  -DCOSMO_STATS=1   -DCOSMO_DEBUG=2        -DCACHE_TREE            Reductions.cpp DataManager.cpp Sorter.cpp TreePiece.cpp CacheManager.C param.c ../GenericTree/GenericTreeNode.C ParallelGravity.cpp|while read i;do echo $i| awk -F' ' '{for (i=1;i<NF;++i) print $i" \\"}';echo;done|grep -v "charm/bin" > Makefile.dep


.PHONY: all docs dist clean depend test

include Makefile.dep
