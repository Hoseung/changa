module CacheManager {
	readonly CProxy_CacheManager cacheManagerProxy;
	extern message FillNodeMsg;

	group [migratable] CacheManager {
		entry CacheManager(int size);
		//entry void recvNodes(CacheKey key,int from,CacheNode &node);
		//entry void recvNodes(int count,Key keys[count],CacheNode nodes[count],int );
		entry void recvNodes(FillBinaryNodeMsg *msg);
		entry void recvNodes(FillNodeMsg *msg);
		entry void cacheSync(double theta, int activeRung, double dEwhCut, CkCallback &cb);
		//entry void recvParticles(CacheKey key,GravityParticle part[num],int num,int from);
                entry void recvParticles(FillParticleMsg *msg);
                entry void finishedChunk(int num, u_int64_t weight);
                entry void allDone();
		entry void collectStatistics(CkCallback &cb);
                entry void stopHPM(CkCallback &cb);
	};
	
	initnode void initNodeLock();
};
